{
	"info": {
		"_postman_id": "1bd1c7da-669d-1489-263a-abb8fa6f701a",
		"name": "spring-postgresql-demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "87a77ff0-9c52-4129-b6c9-2b8906f3f5b5",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/actuator/env",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ff34beb-9e98-4a77-b7a9-14e366cb5e96",
						"type": "text/javascript",
						"exec": [
							"var env = pm.environment.get(\"env\");",
							"var version = \"2.0.0\";",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body contains correct app version\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"PCF Spring PostgreSQL Demo v\" + version + \"\");",
							"});",
							"",
							"pm.test(\"Body contains correct active profile\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"The '\" + env + \"' Profile is active\");",
							"});",
							"",
							"pm.test(\"Header 'server' contains value 'envoy'\", function () {",
							"    pm.expect(postman.getResponseHeader(\"server\")).to.include(\"envoy\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/actuator/env",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"actuator",
						"env"
					]
				}
			},
			"response": []
		},
		{
			"name": "/actuator/mappings",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffa3f685-45d3-4d8f-9acd-55b44d9e7d36",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/actuator/configprops",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"actuator",
						"configprops"
					]
				}
			},
			"response": []
		},
		{
			"name": "/actuator/configprops",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9da05168-85c4-4a3e-b38c-1ce3efb2b19b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/actuator/configprops",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"actuator",
						"configprops"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67be66c2-d959-4fc0-b96d-9e77317f81f3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df9c6ddc-f652-4df4-a2d2-7d97bc1270bc",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"var candidateId = jsonData._links.self.href.split(\"/\").pop();",
							"postman.setEnvironmentVariable(\"candidateId\", candidateId);"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b0543aa2-9a97-4df6-8c86-c33fdd4d6a6d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"Ron\",\r\n  \"lastName\": \"Paul\",\r\n  \"politicalParty\": \"Republican Party\",\r\n  \"homeState\": \"Texas\",\r\n  \"experience\": \"U.S. House of Representatives\"\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates/{{candidateId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b58cee42-16aa-40f0-a3f8-d0bcdbe4e7cd",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"Ron\",\r\n  \"lastName\": \"Paul\",\r\n  \"politicalParty\": \"Republican Party\",\r\n  \"homeState\": \"Texas\",\r\n  \"experience\": \"Member of the U.S. House of Representatives from Texas's 22nd district\"\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates/{{candidateId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates",
						"{{candidateId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates/{{candidateId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b58cee42-16aa-40f0-a3f8-d0bcdbe4e7cd",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"experience\": \"Current member of the U.S. House of Representatives from Texas's 22nd district\"\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates/{{candidateId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates",
						"{{candidateId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates/{{candidateId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a0f2c37-07f8-40e0-8929-9828ebcd4396",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates/{{candidateId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates",
						"{{candidateId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates/summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "53b16f2a-3ed5-41d3-ad0c-34256441dbda",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates/summary",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates/summary/{election}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7078ca2c-7a96-4c16-91a1-d1264c1b03a5",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates/summary/Democratic Party",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates",
						"summary",
						"Democratic Party"
					]
				}
			},
			"response": []
		},
		{
			"name": "/candidates/search/findByLastName?lastName=Paul",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "443b5642-b866-4e66-b175-3269a23f655a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b844e5f7-94c9-454a-a35c-60e6dc2fde5e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"Ron\",\r\n  \"lastName\": \"Paul\",\r\n  \"politicalParty\": \"Republican Party\",\r\n  \"homeState\": \"Texas\",\r\n  \"experience\": \"U.S. House of Representatives\"\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/candidates/search/findByLastName?lastName=Paul",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"candidates",
						"search",
						"findByLastName"
					],
					"query": [
						{
							"key": "lastName",
							"value": "Paul"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/election-candidates",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e4e4ee1-8c19-4fe9-9dae-33e723af6062",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"Ron\",\r\n  \"lastName\": \"Paul\",\r\n  \"politicalParty\": \"Republican Party\",\r\n  \"homeState\": \"Texas\",\r\n  \"experience\": \"Member of the U.S. House of Representatives from Texas's 22nd district\"\r\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/election-candidates",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"election-candidates"
					]
				}
			},
			"response": []
		},
		{
			"name": "/votes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18b9e030-637f-4c39-95b0-4aad1c15edd0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"var voteId = jsonData._links.self.href.split(\"/\").pop();",
							"postman.setEnvironmentVariable(\"voteId\", voteId);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"election_candidate_id\": 1\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/votes",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"votes"
					]
				}
			},
			"response": []
		},
		{
			"name": "/votes/{{voteId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "517c2669-d101-47ab-9a8c-e657fff62eeb",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/votes/{{voteId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"votes",
						"{{voteId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/votes?page=1&size=25",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "517c2669-d101-47ab-9a8c-e657fff62eeb",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/votes?page=1&size=25",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"votes"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "25"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/vote-totals",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b01eced-ca25-47ef-ace1-5b6e327cb699",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{env}}/vote-totals",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{env}}",
						"vote-totals"
					]
				}
			},
			"response": []
		}
	]
}