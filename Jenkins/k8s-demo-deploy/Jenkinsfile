#!groovy

def ACCOUNT = "garystafford"
def PROJECT_NAME = "spring-postgresql-demo"
def ENVIRONMENT = "dev"

pipeline {
    agent any
    stages {
        stage('Checkout GitHub') {
            steps {
                git changelog: true, poll: false,
                        branch: 'master',
                        url: "https://github.com/${ACCOUNT}/${PROJECT_NAME}"
            }
        }
        stage('Get Cluster Creds') {
            steps {
                dir('kubernetes') {
                    sh 'sh ./part1b-get-cluster-creds.sh'
                }
            }
        }
        stage('Build Environments') { // dev, test, uat
            steps {
                dir('kubernetes') {
                    sh 'sh ./part2-create-environments.sh'
                }
            }
        }
        stage('Deploy Postgres to dev') { // doesn't work with istio!
            steps {
                dir('kubernetes') {
                    sh 'sh ./deploy-postgres-gke-dev.sh'
                }
            }
        }
        stage('Deploy Election v1 to dev') {
            environment { // get cluster ip ranges for deploy script
                IP_RANGES = sh(returnStdout: true,
                        script: 'sh ./kubernetes/get-cluster-ip-ranges.sh')
            }
            steps {
                dir('kubernetes') {
                    sh 'env | sort'
                    sh 'sh ./part3a-deploy-v1-dev.sh'
                }
            }
        }
        stage('Smoke Test') { // assumes 'api.dev.voter-demo.com' reachable
            steps {
                dir('postman') {
                    nodejs('nodejs') {
                        sh "sh ./newman-smoke-tests-${ENVIRONMENT}.sh"
                    }
                    junit '**/newman/*.xml'
                }
            }
        }
    }
}
