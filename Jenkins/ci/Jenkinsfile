#!groovy

def ARTIFACT_NAME = "spring-postgresql-demo"
def ARTIFACT_VERSION = "2.1"

pipeline {
 agent any
 tools {
  gradle 'gradle'
 }
 stages {
  stage('Checkout GitHub') {
   steps {
    git changelog: true, poll: true,
     branch: 'h2',
     url: "https://github.com/garystafford/${ARTIFACT_NAME}"
   }
  }
  stage('Build JAR') {
   steps {
    sh 'gradle clean build -x test'
   }
  }
  stage('Unit Test') {
   steps {
     withEnv(['SPRING_DATASOURCE_URL=jdbc:h2:file:~/elections']) {
       sh 'gradle cleanTest test'
     }
     junit '**/build/test-results/test/*.xml'
   }
  }
  stage('SonarQube Analysis') {
   steps {
    withSonarQubeEnv('Local SonarQube') {
     sh "gradle sonarqube -Dsonar.projectName=${ARTIFACT_NAME}"
    }
   }
  }
  stage('Publish Artifact') {
   steps {
    withCredentials([string(credentialsId: 'GIT_TOKEN', variable: 'GIT_TOKEN')]) {
     sh "cd build/libs \
         && git init \
         && git config user.name \"jenkins-ci\" \
         && git config user.email \"jenkins-ci@jenkins-ci.com\" \
         && mv *.jar ${ARTIFACT_NAME}-${ARTIFACT_VERSION}.${BUILD_NUMBER}.jar \
         && git add *.jar \
         && git commit -m \"Publish ${ARTIFACT_NAME}-${ARTIFACT_VERSION}.${BUILD_NUMBER}.jar\" \
         && git push --force --quiet --progress \
            \"https://x-access-token:${GIT_TOKEN}@github.com/garystafford/${ARTIFACT_NAME}.git\" \
            master:build-artifacts-gke"
    }
   }
  }
 }
}
