#!groovy

pipeline {
 agent any
 tools {
  gradle 'gradle'
 }
 stages {
  stage('Checkout from GitHub') {
   steps {
    git changelog: true, poll: true,
     branch: 'h2',
     url: 'https://github.com/garystafford/spring-postgresql-demo'
   }
  }
  stage('Build JAR') {
   steps {
    sh 'gradle clean build -x test'
   }
  }
  stage('Unit Test') {
   steps {
     withEnv(['SPRING_DATASOURCE_URL=jdbc:h2:file:~/elections']) {
       sh 'gradle cleanTest test'
     }
     junit '**/build/test-results/test/*.xml'
   }
  }
  stage('SonarQube Analysis') {
   steps {
    withSonarQubeEnv('Local SonarQube') {
     sh 'gradle sonarqube -Dsonar.projectName=spring-postgresql-demo'
    }
   }
  }
  stage('Publish Artifact') {
   steps {
    withCredentials([string(credentialsId: 'GIT_TOKEN', variable: 'GIT_TOKEN')]) {
     sh 'cd build/libs \
         && git init \
         && git config user.name "jenkins-ci" \
         && git config user.email "jenkins-ci@jenkins-ci.com" \
         && git add *.jar \
         && git commit -m "Deploy JAR build artifact to GitHub" \
         && git push --force --quiet --progress \
            "https://x-access-token:$GIT_TOKEN@github.com/garystafford/spring-postgresql-demo.git" \
            master:build-artifacts-gke'
    }
   }
  }
 }
}
